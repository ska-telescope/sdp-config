<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="4" skipped="20" tests="55" time="16.852" timestamp="2021-05-20T06:39:47.004998" hostname="493a813f4bd2"><testcase classname="setup" name="PYLINT" file="setup.py" time="0.001"><skipped type="pytest.skip" message="file(s) previously passed pylint checks">/usr/local/lib/python3.9/site-packages/pytest_pylint/plugin.py:340: file(s) previously passed pylint checks</skipped></testcase><testcase classname="docs.src.conf" name="PYLINT" file="docs/src/conf.py" time="0.001"><skipped type="pytest.skip" message="file(s) previously passed pylint checks">/usr/local/lib/python3.9/site-packages/pytest_pylint/plugin.py:340: file(s) previously passed pylint checks</skipped></testcase><testcase classname="src.ska_sdp_config.__init__" name="PYLINT" file="src/ska_sdp_config/__init__.py" time="0.001"><skipped type="pytest.skip" message="file(s) previously passed pylint checks">/usr/local/lib/python3.9/site-packages/pytest_pylint/plugin.py:340: file(s) previously passed pylint checks</skipped></testcase><testcase classname="src.ska_sdp_config.cli" name="PYLINT" file="src/ska_sdp_config/cli.py" time="0.004"><skipped type="pytest.skip" message="file(s) previously passed pylint checks">/usr/local/lib/python3.9/site-packages/pytest_pylint/plugin.py:340: file(s) previously passed pylint checks</skipped></testcase><testcase classname="src.ska_sdp_config.config" name="PYLINT" file="src/ska_sdp_config/config.py" time="0.001"><failure message="W:519, 5: TODO: Implements all the functions requirements (fixme)&#10;W:520, 5: TODO: Write unit-test (fixme)&#10;W:521, 5: TODO: Update documentation (fixme)&#10;W:522, 5: TODO: Push to branch (fixme)&#10;W:550, 5: TODO Need to list all workflows, specified type and specified type and name (fixme)&#10;C:524, 4: Argument name &quot;id&quot; doesn't conform to snake_case naming style (invalid-name)&#10;W:524,30: Redefining built-in 'type' (redefined-builtin)&#10;W:524,36: Redefining built-in 'id' (redefined-builtin)&#10;C:537, 4: Argument name &quot;id&quot; doesn't conform to snake_case naming style (invalid-name)&#10;W:537,27: Redefining built-in 'type' (redefined-builtin)&#10;W:537,33: Redefining built-in 'id' (redefined-builtin)&#10;C:551, 4: Argument name &quot;id&quot; doesn't conform to snake_case naming style (invalid-name)&#10;W:551,29: Redefining built-in 'type' (redefined-builtin)&#10;W:551,38: Redefining built-in 'id' (redefined-builtin)&#10;W:551,29: Unused argument 'type' (unused-argument)&#10;W:551,38: Unused argument 'id' (unused-argument)&#10;W:551,45: Unused argument 'version' (unused-argument)&#10;C:568, 4: Argument name &quot;id&quot; doesn't conform to snake_case naming style (invalid-name)&#10;W:568,30: Redefining built-in 'type' (redefined-builtin)&#10;W:568,36: Redefining built-in 'id' (redefined-builtin)&#10;C:576, 4: Argument name &quot;id&quot; doesn't conform to snake_case naming style (invalid-name)&#10;W:576,30: Redefining built-in 'type' (redefined-builtin)&#10;W:576,36: Redefining built-in 'id' (redefined-builtin)&#10;C:592, 4: Argument name &quot;id&quot; doesn't conform to snake_case naming style (invalid-name)&#10;W:592,29: Redefining built-in 'type' (redefined-builtin)&#10;W:592,35: Redefining built-in 'id' (redefined-builtin)&#10;R:592, 4: Method could be a function (no-self-use)">W:519, 5: TODO: Implements all the functions requirements (fixme)
W:520, 5: TODO: Write unit-test (fixme)
W:521, 5: TODO: Update documentation (fixme)
W:522, 5: TODO: Push to branch (fixme)
W:550, 5: TODO Need to list all workflows, specified type and specified type and name (fixme)
C:524, 4: Argument name "id" doesn't conform to snake_case naming style (invalid-name)
W:524,30: Redefining built-in 'type' (redefined-builtin)
W:524,36: Redefining built-in 'id' (redefined-builtin)
C:537, 4: Argument name "id" doesn't conform to snake_case naming style (invalid-name)
W:537,27: Redefining built-in 'type' (redefined-builtin)
W:537,33: Redefining built-in 'id' (redefined-builtin)
C:551, 4: Argument name "id" doesn't conform to snake_case naming style (invalid-name)
W:551,29: Redefining built-in 'type' (redefined-builtin)
W:551,38: Redefining built-in 'id' (redefined-builtin)
W:551,29: Unused argument 'type' (unused-argument)
W:551,38: Unused argument 'id' (unused-argument)
W:551,45: Unused argument 'version' (unused-argument)
C:568, 4: Argument name "id" doesn't conform to snake_case naming style (invalid-name)
W:568,30: Redefining built-in 'type' (redefined-builtin)
W:568,36: Redefining built-in 'id' (redefined-builtin)
C:576, 4: Argument name "id" doesn't conform to snake_case naming style (invalid-name)
W:576,30: Redefining built-in 'type' (redefined-builtin)
W:576,36: Redefining built-in 'id' (redefined-builtin)
C:592, 4: Argument name "id" doesn't conform to snake_case naming style (invalid-name)
W:592,29: Redefining built-in 'type' (redefined-builtin)
W:592,35: Redefining built-in 'id' (redefined-builtin)
R:592, 4: Method could be a function (no-self-use)</failure></testcase><testcase classname="src.ska_sdp_config.version" name="PYLINT" file="src/ska_sdp_config/version.py" time="0.000"><skipped type="pytest.skip" message="file(s) previously passed pylint checks">/usr/local/lib/python3.9/site-packages/pytest_pylint/plugin.py:340: file(s) previously passed pylint checks</skipped></testcase><testcase classname="src.ska_sdp_config.backend.__init__" name="PYLINT" file="src/ska_sdp_config/backend/__init__.py" time="0.001"><skipped type="pytest.skip" message="file(s) previously passed pylint checks">/usr/local/lib/python3.9/site-packages/pytest_pylint/plugin.py:340: file(s) previously passed pylint checks</skipped></testcase><testcase classname="src.ska_sdp_config.backend.common" name="PYLINT" file="src/ska_sdp_config/backend/common.py" time="0.005"><skipped type="pytest.skip" message="file(s) previously passed pylint checks">/usr/local/lib/python3.9/site-packages/pytest_pylint/plugin.py:340: file(s) previously passed pylint checks</skipped></testcase><testcase classname="src.ska_sdp_config.backend.etcd3" name="PYLINT" file="src/ska_sdp_config/backend/etcd3.py" time="0.000"><skipped type="pytest.skip" message="file(s) previously passed pylint checks">/usr/local/lib/python3.9/site-packages/pytest_pylint/plugin.py:340: file(s) previously passed pylint checks</skipped></testcase><testcase classname="src.ska_sdp_config.backend.memory" name="PYLINT" file="src/ska_sdp_config/backend/memory.py" time="0.000"><skipped type="pytest.skip" message="file(s) previously passed pylint checks">/usr/local/lib/python3.9/site-packages/pytest_pylint/plugin.py:340: file(s) previously passed pylint checks</skipped></testcase><testcase classname="src.ska_sdp_config.entity.__init__" name="PYLINT" file="src/ska_sdp_config/entity/__init__.py" time="0.000"><skipped type="pytest.skip" message="file(s) previously passed pylint checks">/usr/local/lib/python3.9/site-packages/pytest_pylint/plugin.py:340: file(s) previously passed pylint checks</skipped></testcase><testcase classname="src.ska_sdp_config.entity.deployment" name="PYLINT" file="src/ska_sdp_config/entity/deployment.py" time="0.002"><skipped type="pytest.skip" message="file(s) previously passed pylint checks">/usr/local/lib/python3.9/site-packages/pytest_pylint/plugin.py:340: file(s) previously passed pylint checks</skipped></testcase><testcase classname="src.ska_sdp_config.entity.pb" name="PYLINT" file="src/ska_sdp_config/entity/pb.py" time="0.000"><skipped type="pytest.skip" message="file(s) previously passed pylint checks">/usr/local/lib/python3.9/site-packages/pytest_pylint/plugin.py:340: file(s) previously passed pylint checks</skipped></testcase><testcase classname="tests.__init__" name="PYLINT" file="tests/__init__.py" time="0.000"><skipped type="pytest.skip" message="file(s) previously passed pylint checks">/usr/local/lib/python3.9/site-packages/pytest_pylint/plugin.py:340: file(s) previously passed pylint checks</skipped></testcase><testcase classname="tests.test_backend_etcd3" name="PYLINT" file="tests/test_backend_etcd3.py" time="0.002"><skipped type="pytest.skip" message="file(s) previously passed pylint checks">/usr/local/lib/python3.9/site-packages/pytest_pylint/plugin.py:340: file(s) previously passed pylint checks</skipped></testcase><testcase classname="tests.test_backend_etcd3" name="test_valid" file="tests/test_backend_etcd3.py" line="25" time="0.062" /><testcase classname="tests.test_backend_etcd3" name="test_create" file="tests/test_backend_etcd3.py" line="44" time="0.104" /><testcase classname="tests.test_backend_etcd3" name="test_list" file="tests/test_backend_etcd3.py" line="81" time="0.739" /><testcase classname="tests.test_backend_etcd3" name="test_lease" file="tests/test_backend_etcd3.py" line="141" time="0.339" /><testcase classname="tests.test_backend_etcd3" name="test_delete" file="tests/test_backend_etcd3.py" line="153" time="1.214" /><testcase classname="tests.test_backend_etcd3" name="test_watch" file="tests/test_backend_etcd3.py" line="199" time="0.742" /><testcase classname="tests.test_backend_etcd3" name="test_transaction_simple" file="tests/test_backend_etcd3.py" line="256" time="0.258" /><testcase classname="tests.test_backend_etcd3" name="test_transaction_delete" file="tests/test_backend_etcd3.py" line="296" time="0.120" /><testcase classname="tests.test_backend_etcd3" name="test_transaction_lease" file="tests/test_backend_etcd3.py" line="331" time="0.334" /><testcase classname="tests.test_backend_etcd3" name="test_transaction_conc" file="tests/test_backend_etcd3.py" line="348" time="0.681" /><testcase classname="tests.test_backend_etcd3" name="test_transaction_list" file="tests/test_backend_etcd3.py" line="419" time="1.005" /><testcase classname="tests.test_backend_etcd3" name="test_transaction_wait" file="tests/test_backend_etcd3.py" line="476" time="0.387" /><testcase classname="tests.test_backend_etcd3" name="test_transaction_watchers" file="tests/test_backend_etcd3.py" line="523" time="0.389" /><testcase classname="tests.test_backend_etcd3" name="test_transaction_watchers_new" file="tests/test_backend_etcd3.py" line="567" time="0.301" /><testcase classname="tests.test_backend_etcd3" name="test_transaction_watch_list" file="tests/test_backend_etcd3.py" line="614" time="0.873" /><testcase classname="tests.test_backend_etcd3" name="test_transaction_watch_list_new" file="tests/test_backend_etcd3.py" line="666" time="0.891" /><testcase classname="tests.test_backend_etcd3" name="test_transaction_retries" file="tests/test_backend_etcd3.py" line="721" time="1.057" /><testcase classname="tests.test_backend_memory" name="PYLINT" file="tests/test_backend_memory.py" time="0.000"><skipped type="pytest.skip" message="file(s) previously passed pylint checks">/usr/local/lib/python3.9/site-packages/pytest_pylint/plugin.py:340: file(s) previously passed pylint checks</skipped></testcase><testcase classname="tests.test_backend_memory" name="test_stuff" file="tests/test_backend_memory.py" line="17" time="0.001" /><testcase classname="tests.test_backend_memory" name="test_state" file="tests/test_backend_memory.py" line="57" time="0.001" /><testcase classname="tests.test_cli" name="PYLINT" file="tests/test_cli.py" time="0.000"><skipped type="pytest.skip" message="file(s) previously passed pylint checks">/usr/local/lib/python3.9/site-packages/pytest_pylint/plugin.py:340: file(s) previously passed pylint checks</skipped></testcase><testcase classname="tests.test_cli" name="test_cli_simple" file="tests/test_cli.py" line="22" time="0.332" /><testcase classname="tests.test_cli" name="test_cli_simple2" file="tests/test_cli.py" line="37" time="0.227" /><testcase classname="tests.test_master" name="PYLINT" file="tests/test_master.py" time="0.000"><skipped type="pytest.skip" message="file(s) previously passed pylint checks">/usr/local/lib/python3.9/site-packages/pytest_pylint/plugin.py:340: file(s) previously passed pylint checks</skipped></testcase><testcase classname="tests.test_master" name="test_master_create_update" file="tests/test_master.py" line="22" time="0.135" /><testcase classname="tests.test_processing_block" name="PYLINT" file="tests/test_processing_block.py" time="0.001"><skipped type="pytest.skip" message="file(s) previously passed pylint checks">/usr/local/lib/python3.9/site-packages/pytest_pylint/plugin.py:340: file(s) previously passed pylint checks</skipped></testcase><testcase classname="tests.test_processing_block" name="test_simple_pb" file="tests/test_processing_block.py" line="28" time="0.001" /><testcase classname="tests.test_processing_block" name="test_create_pblock" file="tests/test_processing_block.py" line="45" time="0.172" /><testcase classname="tests.test_processing_block" name="test_take_pblock" file="tests/test_processing_block.py" line="87" time="0.375" /><testcase classname="tests.test_processing_block" name="test_pblock_state" file="tests/test_processing_block.py" line="113" time="0.096" /><testcase classname="tests.test_scheduling_block" name="PYLINT" file="tests/test_scheduling_block.py" time="0.000"><skipped type="pytest.skip" message="file(s) previously passed pylint checks">/usr/local/lib/python3.9/site-packages/pytest_pylint/plugin.py:340: file(s) previously passed pylint checks</skipped></testcase><testcase classname="tests.test_scheduling_block" name="test_sb_list" file="tests/test_scheduling_block.py" line="22" time="0.142" /><testcase classname="tests.test_scheduling_block" name="test_sb_create_update" file="tests/test_scheduling_block.py" line="50" time="0.071" /><testcase classname="tests.test_subarray" name="PYLINT" file="tests/test_subarray.py" time="0.000"><skipped type="pytest.skip" message="file(s) previously passed pylint checks">/usr/local/lib/python3.9/site-packages/pytest_pylint/plugin.py:340: file(s) previously passed pylint checks</skipped></testcase><testcase classname="tests.test_subarray" name="test_subarray_list" file="tests/test_subarray.py" line="22" time="0.138" /><testcase classname="tests.test_subarray" name="test_subarray_create_update" file="tests/test_subarray.py" line="50" time="0.076" /><testcase classname="tests.test_workflow" name="PYLINT" file="tests/test_workflow.py" time="0.000"><failure message="W: 70, 1: TODO NEED TO TEST ALL WORKFLOW, TYPE AND TYPE AND ID (fixme)&#10;C: 26, 4: Variable name &quot;WORKFLOW_TYPE&quot; doesn't conform to snake_case naming style (invalid-name)&#10;C: 27, 4: Variable name &quot;WORKFLOW_ID&quot; doesn't conform to snake_case naming style (invalid-name)&#10;C: 28, 4: Variable name &quot;WORKFLOW_VERSION&quot; doesn't conform to snake_case naming style (invalid-name)&#10;C: 29, 4: Variable name &quot;WORKFLOW_IMAGE&quot; doesn't conform to snake_case naming style (invalid-name)&#10;C: 74, 4: Variable name &quot;WORKFLOW_TYPE&quot; doesn't conform to snake_case naming style (invalid-name)&#10;C: 75, 4: Variable name &quot;WORKFLOW_ID&quot; doesn't conform to snake_case naming style (invalid-name)&#10;C: 76, 4: Variable name &quot;WORKFLOW_VERSION&quot; doesn't conform to snake_case naming style (invalid-name)&#10;C: 77, 4: Variable name &quot;WORKFLOW_IMAGE&quot; doesn't conform to snake_case naming style (invalid-name)&#10;C:120, 4: Variable name &quot;WORKFLOW_TYPE&quot; doesn't conform to snake_case naming style (invalid-name)&#10;C:121, 4: Variable name &quot;WORKFLOW_ID&quot; doesn't conform to snake_case naming style (invalid-name)&#10;C:122, 4: Variable name &quot;WORKFLOW_VERSION&quot; doesn't conform to snake_case naming style (invalid-name)&#10;C:123, 4: Variable name &quot;WORKFLOW_IMAGE&quot; doesn't conform to snake_case naming style (invalid-name)&#10;C:148,15: Comparison 'state == None' should be 'state is None' (singleton-comparison)">W: 70, 1: TODO NEED TO TEST ALL WORKFLOW, TYPE AND TYPE AND ID (fixme)
C: 26, 4: Variable name "WORKFLOW_TYPE" doesn't conform to snake_case naming style (invalid-name)
C: 27, 4: Variable name "WORKFLOW_ID" doesn't conform to snake_case naming style (invalid-name)
C: 28, 4: Variable name "WORKFLOW_VERSION" doesn't conform to snake_case naming style (invalid-name)
C: 29, 4: Variable name "WORKFLOW_IMAGE" doesn't conform to snake_case naming style (invalid-name)
C: 74, 4: Variable name "WORKFLOW_TYPE" doesn't conform to snake_case naming style (invalid-name)
C: 75, 4: Variable name "WORKFLOW_ID" doesn't conform to snake_case naming style (invalid-name)
C: 76, 4: Variable name "WORKFLOW_VERSION" doesn't conform to snake_case naming style (invalid-name)
C: 77, 4: Variable name "WORKFLOW_IMAGE" doesn't conform to snake_case naming style (invalid-name)
C:120, 4: Variable name "WORKFLOW_TYPE" doesn't conform to snake_case naming style (invalid-name)
C:121, 4: Variable name "WORKFLOW_ID" doesn't conform to snake_case naming style (invalid-name)
C:122, 4: Variable name "WORKFLOW_VERSION" doesn't conform to snake_case naming style (invalid-name)
C:123, 4: Variable name "WORKFLOW_IMAGE" doesn't conform to snake_case naming style (invalid-name)
C:148,15: Comparison 'state == None' should be 'state is None' (singleton-comparison)</failure></testcase><testcase classname="tests.test_workflow" name="test_workflow_create_update" file="tests/test_workflow.py" line="23" time="0.073"><failure message="ska_sdp_config.backend.common.ConfigCollision: Cannot create /workflow/batch:test_batch:0.2.1, as it already exists!">cfg = &lt;ska_sdp_config.config.Config object at 0x7fa6cf7ec6a0&gt;

    def test_workflow_create_update(cfg):
    
        WORKFLOW_TYPE = "batch"
        WORKFLOW_ID = "test_batch"
        WORKFLOW_VERSION = "0.2.1"
        WORKFLOW_IMAGE = "workflow-test-batch"
    
        workflow = {
            "type": WORKFLOW_TYPE,
            "id": WORKFLOW_ID,
            "repository": "nexus",
            "image": WORKFLOW_IMAGE,
            "versions": [WORKFLOW_VERSION],
        }
    
        workflow2 = {
            "type": "batch",
            "id": "test_realtime",
            "repository": "nexus",
            "image": "workflow-test-realtime",
            "versions": ["0.0.1"],
        }
    
        # Create workflow
        for txn in cfg.txn():
&gt;           txn.create_workflow(WORKFLOW_TYPE, WORKFLOW_ID, WORKFLOW_VERSION, workflow)

tests/test_workflow.py:49: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
src/ska_sdp_config/config.py:535: in create_workflow
    self._create(self._workflow_path(type, id, version), workflow)
src/ska_sdp_config/config.py:218: in _create
    self._txn.create(path, dict_to_json(obj), lease)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;ska_sdp_config.backend.etcd3.Etcd3Transaction object at 0x7fa6cf789a00&gt;, path = '/workflow/batch:test_batch:0.2.1'
value = '{\n  "id": "test_batch",\n  "image": "workflow-test-batch",\n  "repository": "nexus",\n  "type": "batch",\n  "versions": [\n    "0.2.1"\n  ]\n}', lease = None

    def create(self, path :str, value :str, lease=None):
        """Create a key and initialise it with the value.
    
        Fails if the key already exists. If a lease is given, the key will
        automatically get deleted once it expires.
    
        :param path: Path to create
        :param value: Value to set
        :param lease: Lease to associate
        :raises: ConfigCollision
        """
        self._ensure_uncommitted()
    
        # Attempt to get the value - mainly to check whether it exists
        # and put it into the query log
        result = self.get(path)
        if result is not None:
&gt;           raise ConfigCollision(
                path, "Cannot create {}, as it already exists!".format(path))
E           ska_sdp_config.backend.common.ConfigCollision: Cannot create /workflow/batch:test_batch:0.2.1, as it already exists!

src/ska_sdp_config/backend/etcd3.py:608: ConfigCollision</failure></testcase><testcase classname="tests.test_workflow" name="test_workflow_list" file="tests/test_workflow.py" line="70" time="0.014"><failure message="AssertionError: assert ['/workflow/batch:test_batch:0.2.1'] == []&#10;  Left contains one more item: '/workflow/batch:test_batch:0.2.1'&#10;  Full diff:&#10;  - []&#10;  + ['/workflow/batch:test_batch:0.2.1']">cfg = &lt;ska_sdp_config.config.Config object at 0x7fa6cf7ec6a0&gt;

    def test_workflow_list(cfg):
    
        workflow_list = ["/workflow/realtime:test_real:0.2.1"]
        WORKFLOW_TYPE = "realtime"
        WORKFLOW_ID = "test_real"
        WORKFLOW_VERSION = "0.2.1"
        WORKFLOW_IMAGE = "workflow-test-real"
    
    
        # Check the workflow list is empty
        for txn in cfg.txn():
            w_list = txn.list_workflows()
&gt;           assert w_list == []
E           AssertionError: assert ['/workflow/batch:test_batch:0.2.1'] == []
E             Left contains one more item: '/workflow/batch:test_batch:0.2.1'
E             Full diff:
E             - []
E             + ['/workflow/batch:test_batch:0.2.1']

tests/test_workflow.py:83: AssertionError</failure></testcase><testcase classname="tests.test_workflow" name="test_delete_workflow" file="tests/test_workflow.py" line="118" time="0.482" /></testsuite></testsuites>