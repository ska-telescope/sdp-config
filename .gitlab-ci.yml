variables:
  GIT_STRATEGY: clone

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH

stages:
  - test
  - lint
  - build
  - integrate
  - publish

image: python:latest

# ============================================================================
# Test and lint Python package
# ============================================================================

test:
  stage: test
  services:
    - name: quay.io/coreos/etcd:latest
      alias: etcd
      command:
        - /usr/local/bin/etcd
        - "--advertise-client-urls=http://0.0.0.0:2379"
        - "--listen-client-urls=http://0.0.0.0:2379"
        - "--initial-advertise-peer-urls=http://0.0.0.0:2380"
        - "--listen-peer-urls=http://0.0.0.0:2380"
        - "--initial-cluster=default=http://0.0.0.0:2380"
  variables:
    SDP_TEST_HOST: etcd
  before_script:
    - pip3 install -r requirements.txt -r requirements-test.txt
  script:
    - 'curl --location --output artifacts.zip --header "JOB-TOKEN: $CI_JOB_TOKEN" "https://gitlab.com/api/v4/projects/21141276/jobs/artifacts/master/download?job=build_release"'
    - ls
    - unzip -l artifacts.zip
    - echo $BKM_TEST
    - python3 setup.py test
  after_script:
    - mkdir -p build/reports
    - mv code-coverage.xml unit-tests.xml build/reports
  artifacts:
    paths:
      - build
    expire_in: 1 week
    when: always

lint:
  stage: lint
  dependencies:
    - test
  before_script:
    - pip3 install -r requirements.txt -r requirements-test.txt
  script:
    - pylint --exit-zero --output-format=parseable src/ska_sdp_config
    - pylint --exit-zero --output-format=pylint2junit.JunitReporter src/ska_sdp_config > linting.xml
  after_script:
    - mkdir -p build/reports
    - mv linting.xml build/reports
  artifacts:
    paths:
      - build
    expire_in: 1 week
    when: always

# ============================================================================
# Build Python package
# ============================================================================

.build_python:
  stage: build
  artifacts:
    paths:
      - dist/
    expire_in: 1 week

# Executed on a non-master commit

build_dev:
  extends: .build_python
  except: [master]
  script:
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel

# Executed on a master commit

build_release:
  extends: .build_python
  only: [master]
  script:
    - python3 setup.py sdist bdist_wheel

# Trigger builds in downstream repositories

.env: &env
   variables:
     UPSTREAM_PIPELINE_ID: $CI_PIPELINE_ID
     UPSTREAM_REPO_NAME: $CI_PROJECT_NME
     UPSTREAM_BRANCH_NAME: $CI_COMMIT_REF_NAME

trigger_lmc:
  stage: integrate
  <<: *env
  trigger:
      project: ska-telescope/sdp-lmc
      branch: SIM-594/Implement_dependencies

trigger_proccontrol:
  stage: integrate
  <<: *env
  trigger:
      project: ska-telescope/sdp-proccontrol
      branch: SIM-594/Implement_dependencies
      
trigger_helmdeploy:
  stage: integrate
  <<: *env
  trigger:
      project: ska-telescope/sdp-helmdeploy
      branch: SIM-594/Implement_dependencies

trigger_console:
  stage:  integrate
  <<: *env
  trigger:
      project: ska-telescope/sdp-console
      branch: SIM-594/Implement_dependencies

#trigger_integrate:
#  stage: integrate
# trigger:
#     project: ska-telescope/sdp-integration
#     branch: SIM-594/Implement_dependencies
           
# ============================================================================
# Publish Python package (master only)
# ============================================================================

publish:
  stage: publish
  only: [master]
  variables:
    TWINE_USERNAME: $TWINE_USERNAME
    TWINE_PASSWORD: $TWINE_PASSWORD
  before_script:
    - pip install twine
  script:
    - twine upload --repository-url $PYPI_REPOSITORY_URL dist/* || true

# ============================================================================
# CI metrics
# ============================================================================

create_ci_metrics:
  stage: .post
  when: always
  script:
    # Gitlab CI badges creation: START
    - curl -s https://gitlab.com/ska-telescope/ci-metrics-utilities/raw/master/scripts/ci-badges-func.sh | sh
    # Gitlab CI badges creation: END
  artifacts:
    paths:
      - build
    expire_in: 1 week
